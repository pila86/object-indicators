#Область ПрограммныйИнтерфейс

// Процедура-обработчик события "ПерезЗаписью" справочников для механизма запуска расчета показателей объектов.
// 
// Параметры:
// 	Источник - СправочникОбъект - Источник события.
// 	Отказ - Булево - Флаг отказа от выполнения обработчика.
Процедура ПередЗаписьюОбъекта(Источник, Отказ) Экспорт
	
	Если (Источник.ОбменДанными.Загрузка) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	МетаданныеОбъекта = Источник.Метаданные();
	ПолноеИмяМетаданных = МетаданныеОбъекта.ПолноеИмя();
	
	Если (Не ПоказателиОбъектовПовтИсп.ОбъектМетаданыхЯвляетсяТриггером(ПолноеИмяМетаданных)) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьСсылкуНовогоПриНеобходимости(Источник);
	
	ИнициализироватьДополнительныеСвойстваСсылочногоОбъекта(Источник);
	
	Если Источник.ДополнительныеСвойства.ПоказателиОбъектов.ЗависимыеПоказатели.Количество() > 0 Тогда
		ВыполнитьЗапросСсылочныйОбъект(Источник.ДополнительныеСвойства, "ВТ_ДоИзменения");
	КонецЕсли;
	
КонецПроцедуры

// Процедура-обработчик события "ПерезЗаписью" документов для механизма запуска расчета показателей объектов.
// 
// Параметры:
// 	Источник - ДокументОбъект - Источник события.
// 	Отказ - Булево - Флаг отказа от выполнения обработчика.
// 	РежимЗаписи - РежимЗаписиДокумента - см. в синтаксис-помощнике РежимЗаписиДокумента.
// 	РежимПроведения - РежимПроведенияДокумента - см. в синтаксис-помощнике РежимПроведенияДокумента.
Процедура ПередЗаписьюДокумента(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	Если (Источник.ОбменДанными.Загрузка) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	МетаданныеОбъекта = Источник.Метаданные();
	ПолноеИмяМетаданных = МетаданныеОбъекта.ПолноеИмя();
	
	Если (Не ПоказателиОбъектовПовтИсп.ОбъектМетаданыхЯвляетсяТриггером(ПолноеИмяМетаданных)) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьСсылкуНовогоПриНеобходимости(Источник);
	
	ИнициализироватьДополнительныеСвойстваСсылочногоОбъекта(Источник);
	
	Если Источник.ДополнительныеСвойства.ПоказателиОбъектов.ЗависимыеПоказатели.Количество() > 0 Тогда
		ВыполнитьЗапросСсылочныйОбъект(Источник.ДополнительныеСвойства, "ВТ_ДоИзменения");
	КонецЕсли;
	
КонецПроцедуры

// Процедура-обработчик события "ПриЗаписи" справочников, документов для механизма запуска расчета показателей объектов.
// 
// Параметры:
// 	Источник - ДокументОбъект, СправочникОбъект - Источник события.
// 	Отказ - Булево - Флаг отказа от выполнения обработчика.
Процедура ПриЗаписиОбъекта(Источник, Отказ) Экспорт
	
	Если (Источник.ОбменДанными.Загрузка) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДополнительныеСвойства = Источник.ДополнительныеСвойства;
		
	Если (Не ДополнительныеСвойства.Свойство("ПоказателиОбъектов")) Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник.ДополнительныеСвойства.ПоказателиОбъектов.ЗависимыеПоказатели.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьЗапросСсылочныйОбъект(ДополнительныеСвойства, "ВТ_ПослеИзменения");
	
	ЗаполнитьЗначенияКлючейТриггеров(ДополнительныеСвойства);
	
	РассчитатьЗависимыеПоказателиПриЗаписи(ДополнительныеСвойства);
		
КонецПроцедуры


// Процедура-обработчик события "ПерезЗаписью" регистров для механизма запуска расчета показателей объектов.
// 
// Параметры:
// 	Источник - РегистрСведенийНаборЗаписей, РегистрНакопленияНаборЗаписей - Источник события.
// 	Отказ - Булево - Флаг отказа от выполнения обработчика.
// 	Замещение - Булево - Признак замещения существующего набора записей.
Процедура ПередЗаписьюНабораЗаписей(Источник, Отказ, Замещение) Экспорт
	
	Если (Источник.ОбменДанными.Загрузка) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	МетаданныеОбъекта = Источник.Метаданные();
	ПолноеИмяМетаданных = МетаданныеОбъекта.ПолноеИмя();
	
	Если (Не ПоказателиОбъектовПовтИсп.ОбъектМетаданыхЯвляетсяТриггером(ПолноеИмяМетаданных)) Тогда
		Возврат;
	КонецЕсли;
	
	ИнициализироватьДополнительныеСвойстваНабораЗаписей(Источник);
	
	Если Источник.ДополнительныеСвойства.ПоказателиОбъектов.ЗависимыеПоказатели.Количество() > 0 Тогда
		ВыполнитьЗапросНаборЗаписей(Источник.ДополнительныеСвойства, "ВТ_ДоИзменения");
	КонецЕсли;
	
КонецПроцедуры


// Процедура-обработчик события "ПриЗаписи" регистров для механизма запуска расчета показателей объектов.
// 
// Параметры:
// 	Источник - РегистрСведенийНаборЗаписей, РегистрНакопленияНаборЗаписей - Источник события.
// 	Отказ - Булево - Флаг отказа от выполнения обработчика.
// 	Замещение - Булево - Признак замещения существующего набора записей.
Процедура ПриЗаписиНабораЗаписей(Источник, Отказ, Замещение) Экспорт
	
	Если (Источник.ОбменДанными.Загрузка) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДополнительныеСвойства = Источник.ДополнительныеСвойства;
		
	Если (Не ДополнительныеСвойства.Свойство("ПоказателиОбъектов")) Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник.ДополнительныеСвойства.ПоказателиОбъектов.ЗависимыеПоказатели.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьЗапросНаборЗаписей(ДополнительныеСвойства, "ВТ_ПослеИзменения");
	
	ЗаполнитьЗначенияКлючейТриггеров(ДополнительныеСвойства);
	
	РассчитатьЗависимыеПоказателиПриЗаписи(ДополнительныеСвойства);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияДополнительныхСвойствИсточника

Процедура ИнициализироватьДополнительныеСвойстваОбъекта(Источник)
	
	Источник.ДополнительныеСвойства.Вставить("ПоказателиОбъектов", Новый Структура());
	
	// Полное имя метаданных
	ПолноеИмяМетаданных = Источник.Метаданные().ПолноеИмя();
	Источник.ДополнительныеСвойства.ПоказателиОбъектов.Вставить("ПолноеИмяМетаданных", ПолноеИмяМетаданных);
	
	// Менеджер временных таблиц
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Источник.ДополнительныеСвойства.ПоказателиОбъектов.Вставить("МенеджерВременныхТаблиц", МенеджерВременныхТаблиц);
	
	// Зависимые показатели
	ЗависимыеПоказатели = ПоказателиОбъектовПовтИсп.ЗависимыеПоказателиОбъектаМетаданных(ПолноеИмяМетаданных);
	Источник.ДополнительныеСвойства.ПоказателиОбъектов.Вставить("ЗависимыеПоказатели", ЗависимыеПоказатели);
	
	// Ключи триггеров
	КлючиТриггеров = Новый Массив();
	
	Для Каждого ДанныеПоказателя Из ЗависимыеПоказатели Цикл
		Если (КлючиТриггеров.Найти(ДанныеПоказателя.Ключ) = Неопределено) Тогда
			КлючиТриггеров.Добавить(ДанныеПоказателя.Ключ);
		КонецЕсли;
	КонецЦикла;
	
	Источник.ДополнительныеСвойства.ПоказателиОбъектов.Вставить("КлючиТриггеров", КлючиТриггеров);
	
КонецПроцедуры

Процедура ИнициализироватьДополнительныеСвойстваСсылочногоОбъекта(Источник)
	
	ИнициализироватьДополнительныеСвойстваОбъекта(Источник);
	
	Ссылка = ?(Источник.ЭтоНовый(), Источник.ПолучитьСсылкуНового(), Источник.Ссылка);
	
	Источник.ДополнительныеСвойства.ПоказателиОбъектов.Вставить("Ссылка", Ссылка);
	
КонецПроцедуры

Процедура ИнициализироватьДополнительныеСвойстваНабораЗаписей(Источник)
	
	ИнициализироватьДополнительныеСвойстваОбъекта(Источник);
	
	Источник.ДополнительныеСвойства.ПоказателиОбъектов.Вставить("Отбор", Источник.Отбор);
	
КонецПроцедуры

#КонецОбласти

#Область КлючиТриггеров

Процедура ВыполнитьЗапросСсылочныйОбъект(ДополнительныеСвойства, ИмяВременнойТаблицы)
	
	Ссылка					= ДополнительныеСвойства.ПоказателиОбъектов.Ссылка;						
	ПолноеИмяМетаданных		= ДополнительныеСвойства.ПоказателиОбъектов.ПолноеИмяМетаданных;
	МенеджерВременныхТаблиц	= ДополнительныеСвойства.ПоказателиОбъектов.МенеджерВременныхТаблиц;
	Ключи					= ДополнительныеСвойства.ПоказателиОбъектов.КлючиТриггеров;	
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	&Ключи
		|ПОМЕСТИТЬ #ИмяВременнойТаблицы
		|ИЗ
		|	#Таблица КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка = &Ссылка";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#Таблица",				ПолноеИмяМетаданных);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Ключи",					СтрСоединить(Ключи, ", "));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ИмяВременнойТаблицы",	ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Выполнить();	
	
КонецПроцедуры

Процедура ВыполнитьЗапросНаборЗаписей(ДополнительныеСвойства, ИмяВременнойТаблицы)
	
	Отбор					= ДополнительныеСвойства.ПоказателиОбъектов.Отбор;
	ПолноеИмяМетаданных		= ДополнительныеСвойства.ПоказателиОбъектов.ПолноеИмяМетаданных;
	МенеджерВременныхТаблиц	= ДополнительныеСвойства.ПоказателиОбъектов.МенеджерВременныхТаблиц;
	Ключи					= ДополнительныеСвойства.ПоказателиОбъектов.КлючиТриггеров;
	
	// Текст запроса
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	&Ключи
		|ПОМЕСТИТЬ #ИмяВременнойТаблицы
		|ИЗ
		|	#Таблица КАК Таблица
		|ГДЕ
		|	&Отбор";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#Таблица",				ПолноеИмяМетаданных);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Ключи",					СтрСоединить(Ключи, ", "));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ИмяВременнойТаблицы",	ИмяВременнойТаблицы);
	
	// Текст отбора
	Если (Отбор.Количество() = 0) Тогда
				
		ТекстОтбора = "ИСТИНА";
				
	Иначе		
		
		КоллекцияТекстовОтбора = Новый Массив();
		Для Каждого ЭлементОтбора Из Отбор Цикл
			Если (ЭлементОтбора.Использование) Тогда
				КоллекцияТекстовОтбора.Добавить(СтрШаблон("Таблица.%1 = &%1", ЭлементОтбора.Имя));
			КонецЕсли;
		КонецЦикла;
		
		ТекстОтбора = СтрСоединить(КоллекцияТекстовОтбора, " И ");
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Отбор", ТекстОтбора);
	// Конец Текст отбора
	
	// Конец Текст запроса
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Для Каждого ЭлементОтбора Из Отбор Цикл
		Если (ЭлементОтбора.Использование) Тогда
			Запрос.УстановитьПараметр(ЭлементОтбора.Имя, ЭлементОтбора.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ЗаполнитьЗначенияКлючейТриггеров(ДополнительныеСвойства)
	
	ДополнительныеСвойства.ПоказателиОбъектов.Вставить("ЗначенияКлючейТриггеров", Новый Соответствие());
	
	КлючиТриггеров = ДополнительныеСвойства.ПоказателиОбъектов.КлючиТриггеров;
	
	Если (КлючиТриггеров.Количество() = 0) Тогда
		Возврат;
	КонецЕсли;
	
	ШаблонЗапроса =
		"ВЫБРАТЬ
		|	&Ключ КАК Ссылка
		|ИЗ
		|	ВТ_ДоИзменения КАК Таблица
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	&Ключ
		|ИЗ
		|	ВТ_ПослеИзменения КАК Таблица";
	
	КоллекцияЗапросов = Новый Массив();
	
	Для Каждого Ключ Из КлючиТриггеров Цикл
		
		ТекстЗапроса = ШаблонЗапроса;
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Ключ", "Таблица." + Ключ);
		
		КоллекцияЗапросов.Добавить(ТекстЗапроса);
		
	КонецЦикла;
	
	ТекстЗапроса = СтрСоединить(КоллекцияЗапросов, РазделительПакетаЗапросов());
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ДополнительныеСвойства.ПоказателиОбъектов.МенеджерВременныхТаблиц;
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	Для Индекс = 0 По КлючиТриггеров.Количество() - 1 Цикл
		
		МассивОбъектов = Новый Массив();
		
		ВыборкаОбъектов = РезультатыЗапроса[Индекс].Выбрать();
		Пока (ВыборкаОбъектов.Следующий()) Цикл
			МассивОбъектов.Добавить(ВыборкаОбъектов.Ссылка);
		КонецЦикла;
		
		ДополнительныеСвойства.ПоказателиОбъектов.ЗначенияКлючейТриггеров.Вставить(
			КлючиТриггеров[Индекс], МассивОбъектов);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСПоказателями

Процедура РассчитатьЗависимыеПоказателиПриЗаписи(ДополнительныеСвойства)
		
	ЗависимыеПоказатели = ДополнительныеСвойства.ПоказателиОбъектов.ЗависимыеПоказатели;
	
	Если (ЗависимыеПоказатели.Количество() = 0) Тогда
		Возврат;
	КонецЕсли;

	ЗначенияКлючейТриггеров = ДополнительныеСвойства.ПоказателиОбъектов.ЗначенияКлючейТриггеров;
	
	Для Каждого ДанныеПоказателя Из ЗависимыеПоказатели Цикл

		Показатель		= ДанныеПоказателя.Показатель;	
		МассивОбъектов	= ЗначенияКлючейТриггеров[ДанныеПоказателя.Ключ];
		
		Если ДанныеПоказателя.ОтложенныйРасчет Тогда
			ПоказателиОбъектов.ЗарегистрироватьОтложенныйРасчетПоказателя(Показатель, МассивОбъектов);			
		Иначе
			ПоказателиОбъектов.РассчитатьПоказатель(Показатель, МассивОбъектов);
		КонецЕсли;
					
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Функция РазделительПакетаЗапросов()
	
	Возврат
		"
		|
		|;
		|
		|";
	
КонецФункции

Процедура УстановитьСсылкуНовогоПриНеобходимости(Источник)
	
	Если Не Источник.ЭтоНовый() Или Не Источник.ПолучитьСсылкуНового().Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	ПолноеИмяМетаданных = Источник.Метаданные().ПолноеИмя();
	ПолноеИмяМетаданныхСлова = СтрРазделить(ПолноеИмяМетаданных, ".");
	Тип = ПолноеИмяМетаданныхСлова[0];
	Вид = ПолноеИмяМетаданныхСлова[1];
	
	Если Тип = "Справочник" Тогда
		Менеджер = Справочники[Вид];
	ИначеЕсли Тип = "Документ" Тогда
		Менеджер = Документы[Вид];
	Иначе
		ВызватьИсключение НСтр("ru = 'Неожиданный тип источника'");
	КонецЕсли;
	
	НоваяСсылка = Менеджер.ПолучитьСсылку(Новый УникальныйИдентификатор());
	Источник.УстановитьСсылкуНового(НоваяСсылка);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти